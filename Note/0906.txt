PDF講義:
https://www.dropbox.com/s/i7j6g81ldnib7rg/nodejs_express_mfee_202109.pdf?dl=0


https://bitbucket.org/lsd0125/mfee06-nodejs.git

V8(代號)

LTS 長期維護版本會是偶數版

----------------------------------
如果powershell不行的話 有時候可以試試看cmd

查看全域安裝的情況
npm ls -g 
記得是ls 因為是npm中
-------------
查看其他的aliases 加flag: --help
npm install --help

-----
Node全域中  this === global 
瀏覽器全域中 this === window 


---CommonJS 
CommonJS 不是一個公認的標準 (import/export才是)
package //套件
module //模組

以global的方式安裝會在C槽

----10:37
如果require兩次只有第一次會執行
第二次以後會用之前的參照
因此不會再把檔案開啟一次

----11:24
Node內建的套件 套件的名稱就可以了
const http = require('http');
不用加./


----11:34
阿帕契會根據路徑去尋找對應到的資料夾或檔案

node的話
整個server就是這隻程式
不管怎樣的路經 都是這支

資料會在req裡面
並且我們可以設定res 去設定回應(res)
(從檔頭拿 GET /123/456?a=1)
req.url --> hash不會進去
e.g. /123/456?a=1#abc
只會顯示/123/456?a=1

----Dev
代表開發的時候需要而已
正式版本是不需要用的

//使用DEV套件的方法(npx) 
//只能在專案裡面跑
//且要有nodemon 安裝在專案中
npx nodemon

npx nodemon practice/http_server01.js

npm i --save-dev nodemon (安裝成DEV)

npm un nodemon (移除)

-----------------------------noon

Input/Output

non-block IO
ajax

----
在哪執行檔案就會在哪裡(相對位置)
'./data.json'

指定生成位置:用絕對位置去寫
__dirname + '/data.json'

----02:13
寫入會比讀取要慢
寫入比較慢
理論上讀取會比寫入還要快
因為硬碟的關係

return vs end

----03:18
express的差別
send()的話
string會當成html

另外比較適合簡單的server
因為要定義每個路由處理各種事情

路由兩個重要的:
1.路徑
2.http的方法 e.g. get

--------
也可以直接nodemon
這樣就依package.json裡面的位置(main)

---
start/test 可以不用有run

也可以在package.json裡面
的scripts設定環境變數
e.g.  "start": "NODE_ENV=production nodemon index.js",

window環境變數:
  "dev-win": "set NODE_ENV=production && nodemon index.js"


或是直接在終端
./dev-win.bat

---靜態的資料夾
一開始:
相當於網站的根目錄
app.use(express.static('public'));
server不會去更動內容

後端產生去更動的則是動態的